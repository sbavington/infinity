#!/usr/bin/python3

import os
import glob
import time
import RPi.GPIO as GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
GPIO.setup(18,GPIO.OUT)
GPIO.setup(23,GPIO.OUT)
os.system('modprobe w1-gpio')
os.system('modprobe w1-therm')
base_dir = '/sys/bus/w1/devices/'
device_folder = glob.glob(base_dir + '28*')[0]
device_file = device_folder + '/w1_slave'

demand = 75

def read_temp_raw():
    f = open(device_file, 'r')
    lines = f.readlines()
    f.close()
    return lines

def read_temp():
    lines = read_temp_raw()
    while lines[0].strip()[-3:] != 'YES':
        time.sleep(0.2)
        lines = read_temp_raw()
    equals_pos = lines[1].find('t=')
    if equals_pos != -1:
        temp_string = lines[1][equals_pos+2:]
        temp_c = float(temp_string) / 1000.0
        temp_f = temp_c * 9.0 / 5.0 + 32.0
        demand_f = demand - temp_f
        return temp_c, temp_f, demand_f
while True:
    demand_state = ''
    #print(read_temp())
    cTemp = round(read_temp()[0],2)
    fTemp = round(read_temp()[1],2)
    delta_fTemp = round(read_temp()[2],2)
    if delta_fTemp > 2:
        demand_state = 'Heating'
        GPIO.output(18,GPIO.HIGH)
        GPIO.output(23,GPIO.LOW)
    elif delta_fTemp < -2:
        demand_state = 'Cooling'
        GPIO.output(23,GPIO.HIGH)
        GPIO.output(18,GPIO.LOW)
    elif (delta_fTemp < 2 and delta_fTemp > -2):
        demand_state = 'Waiting'
        GPIO.output(18,GPIO.HIGH)
        GPIO.output(23,GPIO.HIGH)
    print('Temp is now {} and needs to change to {} by {} {} degrees F'.format(fTemp, demand, demand_state, delta_fTemp))
    time.sleep(5)

